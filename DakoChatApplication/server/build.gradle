/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.4.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'

    //id 'org.openjfx.javafxplugin' version '0.0.7'
}
/*
javafx {
    version = "11.0.1"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}
*/
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    implementation 'com.google.guava:guava:27.0.1-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-log4j12
    //compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.26'

    // https://mvnrepository.com/artifact/log4j/log4j
    //compile group: 'log4j', name: 'log4j', version: '1.2.17'

    // https://mvnrepository.com/artifact/commons-logging/commons-logging
    //compile group: 'commons-logging', name: 'commons-logging', version: '1.2'

    // https://mvnrepository.com/artifact/org.openjfx/javafx-fxml
    //compile group: 'org.openjfx', name: 'javafx-fxml', version: '11'
    
    compile project(':common')

    compile project(':tcp')

    //compile project(':udp')

    compile project(':audit_log_server')

    compile files('../libs/jfxrt.jar', '../libs/jfxswt.jar')
    //runtime files('../libs/jfxrt.jar', '../libs/jfxswt.jar')
    //runtime fileTree(dir: 'libs', include: '*.jar')
}

// Define the main class for the application
mainClassName = 'edu.hm.dako.chat.server.ChatServerGUI'

/*
JavaFX Gradle Plugin
https://github.com/FibreFoX/javafx-gradle-plugin
 */

//buildscript {
//    dependencies {
//        classpath group: 'de.dynamicfiles.projects.gradle.plugins', name: 'javafx-gradle-plugin', version: '8.8.2'
//    }
//    repositories {
//        mavenLocal()
//        mavenCentral()
//
//    }
//}

//apply plugin: 'java'

//repositories {
//    mavenLocal()
//    mavenCentral()
//}

//apply plugin: 'javafx-gradle-plugin'


//jfx {
//    // minimal requirement for jfxJar-task
//    mainClass = 'edu.hm.dako.chat.server.ChatServerGUI'
//
//    // minimal requirement for jfxNative-task
//    vendor = 'YourName'
//}

/*
https://gist.github.com/falkoschumann/6c0abf0f9f65a02babad6b070dcf4598
 */
//def embeddedJRE = false

//task copyDependencies(type: Copy) {
//    destinationDir libsDir
//    from configurations.runtime
//}
/*
task javapackager(type: Exec, dependsOn: [assemble, copyDependencies]) {
    def nativeType
    if (System.properties['os.name'].toLowerCase().contains('windows'))
        nativeType = 'msi'
    if (System.properties['os.name'].toLowerCase().contains('mac'))
        nativeType = 'dmg'
    if (System.properties['os.name'].toLowerCase().contains('linux'))
        nativeType = 'rpm'

    def dependencies = []
    configurations.runtime.forEach({ file ->
        dependencies.add('-srcfiles')
        dependencies.add(file.getName())
    })

    def paramEmbeddedJRE = embeddedJRE ? [] : ['-Bruntime=']

    workingDir project.projectDir
    commandLine = [
            'javapackager',
            '-deploy',
            '-nosign',
            '-native', nativeType,
            '-outdir', "${buildDir}/distributions",
            '-outfile', project.name,
            '-name', 'Application Seed',
            '-appclass', mainClassName,
            '-srcdir', libsDir,
            '-srcfiles', jar.archiveName
    ] + dependencies + paramEmbeddedJRE
}
*/