/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.4.1/userguide/tutorial_java_projects.html
 */
plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'
    //id 'org.openjfx.javafxplugin' version '0.0.7'
//    id 'javafx.plugin' version '8.1.1'
}
/*
javafx {
    version = "11.0.1"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}
*/
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    implementation 'com.google.guava:guava:27.0.1-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    // https://mvnrepository.com/artifact/org.openjfx/javafx-fxml
    //compile group: 'org.openjfx', name: 'javafx-fxml', version: '11'

    // https://mvnrepository.com/artifact/log4j/log4j
    //compile group: 'log4j', name: 'log4j', version: '1.2.17'

    // https://mvnrepository.com/artifact/commons-logging/commons-logging
    //compile group: 'commons-logging', name: 'commons-logging', version: '1.2'

    compile project(':common')

    compile project(':tcp')

    compile files('../libs/jfxrt.jar', '../libs/jfxswt.jar')
    //runtime files('../libs/jfxrt.jar', '../libs/jfxswt.jar')
    //runtime fileTree(dir: 'libs', include: '*.jar')
}

// Define the main class for the application
mainClassName = 'edu.hm.dako.chat.client.ClientFxGUI'


// From https://github.com/FibreFoX/javafx-gradle-plugin
//buildscript {
//    dependencies {
//        classpath group: 'de.dynamicfiles.projects.gradle.plugins', name: 'javafx-gradle-plugin', version: '8.8.2'
//    }
    
//    repositories {
//        mavenLocal()
//        mavenCentral()
//    }
//}

//apply plugin: 'javafx-gradle-plugin'


//jfx {
    // minimal requirement for jfxJar-task
    //mainClass = 'full.qualified.nameOf.TheMainClass'
//    mainClass = 'edu.hm.dako.chat.client.ClientFxGUI'
    
    // minimal requirement for jfxNative-task
    //vendor = 'YourName'
//}
// From https://github.com/FibreFoX/javafx-gradle-plugin


// From https://github.com/TheItachiUchiha/javafx-gradle-plugin
//apply plugin: 'javafx-gradle-plugin'


//jfx {
    // minimal requirement for jfxJar-task
    //mainClass = 'full.qualified.nameOf.TheMainClass'
//    mainClass = 'edu.hm.dako.chat.client.ClientFxGUI'
    
    // minimal requirement for jfxNative-task
    //vendor = 'YourName'
//}
// From https://github.com/TheItachiUchiha/javafx-gradle-plugin



// From https://github.com/bmuschko/gradle-javafx-hello-world/blob/master/build.gradle
// Declares binary plugin and its required JavaFX classpath
//apply from: "http://dl.bintray.com/content/shemnon/javafx-gradle/0.3.0/javafx.plugin"
//apply from: "http://dl.bintray.com/content/shemnon/javafx-gradle/8.1./javafx.plugin"

// Configures plugin
//javafx {
    // Points to JDK and its JavaFX libraries, also declares target runtime JDK
//    javaRuntime = '/Library/Java/JavaVirtualMachines/jdk1.7.0_40.jdk'
    
    // Application name and ID presented by target OS
//    appID 'HelloWorldApp'
//    appName 'Hello World Application'
    
    // Main class of application
//    mainClass 'helloworld.HelloWorld'
//    mainClass = 'edu.hm.dako.chat.client.ClientFxGUI'
    
    // JVM arguments, system properties, application command line arguments
//    jvmArgs = ['-XX:+AggressiveOpts', '-XX:CompileThreshold=1']
//    systemProperties = ['prism.disableRegionCaching':'true']
//    arguments = ['-l', '--fast']

    // Keystore credentials for signing JAR
    // Generate key: keytool -genkey -alias release -keyalg RSA -keystore keystore.jks -keysize 2048
//    releaseKey {
//        alias = 'release'
//        keyPass = getProjectProperty('keyStorePassword')
//        keyStore = file("${System.properties['user.home']}/keystore/keystore.jks")
//        storePass = getProjectProperty('storePassword')
//    }
    
//    signingMode 'release'
    
    // ...
//}
// From https://github.com/bmuschko/gradle-javafx-hello-world/blob/master/build.gradle